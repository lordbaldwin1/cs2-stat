// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: matches.sql

package database

import (
	"context"
)

const createMatch = `-- name: CreateMatch :exec
INSERT INTO matches (
  match_url,
  w_avg_leetify_rating,
  w_avg_personal_performance,
  w_avg_hltv_rating,
  w_avg_kd,
  w_avg_aim,
  w_avg_utility,
  l_avg_leetify_rating,
  l_avg_personal_performance,
  l_avg_hltv_rating,
  l_avg_kd,
  l_avg_aim,
  l_avg_utility,
  created_at,
  updated_at
) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
ON CONFLICT(match_url) DO UPDATE SET
  match_url = excluded.match_url,
  w_avg_leetify_rating = excluded.w_avg_leetify_rating,
  w_avg_personal_performance = excluded.w_avg_personal_performance,
  w_avg_hltv_rating = excluded.w_avg_hltv_rating,
  w_avg_kd = excluded.w_avg_kd,
  w_avg_aim = excluded.w_avg_aim,
  w_avg_utility = excluded.w_avg_utility,
  l_avg_leetify_rating = excluded.l_avg_leetify_rating,
  l_avg_personal_performance = excluded.l_avg_personal_performance,
  l_avg_hltv_rating = excluded.l_avg_hltv_rating,
  l_avg_kd = excluded.l_avg_kd,
  l_avg_aim = excluded.l_avg_aim,
  l_avg_utility = excluded.l_avg_utility,
  updated_at = CURRENT_TIMESTAMP
`

type CreateMatchParams struct {
	MatchUrl                string
	WAvgLeetifyRating       float64
	WAvgPersonalPerformance float64
	WAvgHltvRating          float64
	WAvgKd                  float64
	WAvgAim                 float64
	WAvgUtility             float64
	LAvgLeetifyRating       float64
	LAvgPersonalPerformance float64
	LAvgHltvRating          float64
	LAvgKd                  float64
	LAvgAim                 float64
	LAvgUtility             float64
}

func (q *Queries) CreateMatch(ctx context.Context, arg CreateMatchParams) error {
	_, err := q.db.ExecContext(ctx, createMatch,
		arg.MatchUrl,
		arg.WAvgLeetifyRating,
		arg.WAvgPersonalPerformance,
		arg.WAvgHltvRating,
		arg.WAvgKd,
		arg.WAvgAim,
		arg.WAvgUtility,
		arg.LAvgLeetifyRating,
		arg.LAvgPersonalPerformance,
		arg.LAvgHltvRating,
		arg.LAvgKd,
		arg.LAvgAim,
		arg.LAvgUtility,
	)
	return err
}
